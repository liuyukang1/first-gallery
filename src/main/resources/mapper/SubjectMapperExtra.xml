<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.homework_one.dao.SubjectMapperExtra">
  <resultMap id="BaseResultMap" type="com.example.homework_one.dto.SubjectDTO">
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="name" jdbcType="CHAR" property="name" />
    <result column="period" jdbcType="INTEGER" property="period" />
    <result column="credit" jdbcType="INTEGER" property="credit" />
    <collection property="users" javaType="ArrayList" column="id"
                ofType="com.example.homework_one.model.User"
                fetchType="eager"
                select="com.example.homework_one.dao.UserMapper.selectBySubId">
      <result column="id" jdbcType="CHAR" property="id" />
      <result column="name" jdbcType="CHAR" property="name" />
      <result column="password" jdbcType="CHAR" property="password" />
    </collection>
  </resultMap>

  <sql id="Base_Column_List">
    id, name, period, credit
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from subject
    where id = #{id,jdbcType=CHAR}
  </select>
  


  <select id="selectBySubIds" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from
    subject
    <where>
      <if test="subList != null">
        and id in
        <foreach collection="subList" item="item" index="index"
                 open="(" separator="," close=")">
          #{item}
        </foreach>
      </if>
    </where>
  </select>

  <select id="selectByAttributes" resultMap="BaseResultMap" parameterType="com.example.homework_one.model.Subject">
    select
    <include refid="Base_Column_List" />
    from
    subject
    <where>
      <if test="id != null">
        and id = #{id,jdbcType=CHAR}
      </if>
      <if test="name != null">
        and name = #{name,jdbcType=CHAR}
      </if>
      <if test="period != null">
        and period = #{period,jdbcType=CHAR}
      </if>
      <if test="credit != null">
        and credit = #{credit,jdbcType=CHAR}
      </if>
    </where>
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from subject
    where id = #{id,jdbcType=CHAR}
  </delete>

  <insert id="insert" parameterType="com.example.homework_one.model.Subject">
    insert into subject (id, name, period, credit)
    values (#{id,jdbcType=CHAR}, #{name,jdbcType=CHAR},
    #{period,jdbcType=INTEGER}, #{credit,jdbcType=INTEGER})
  </insert>

  <insert id="insertSelective" parameterType="com.example.homework_one.model.Subject">
    insert into subject
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="period != null">
        period,
      </if>
      <if test="credit != null">
        credit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=CHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=CHAR},
      </if>
      <if test="period != null">
        #{period,jdbcType=INTEGER},
      </if>
      <if test="credit != null">
        #{credit,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.homework_one.model.Subject">
    update subject
    <set>
      <if test="name != null">
        name = #{name,jdbcType=CHAR},
      </if>
      <if test="period != null">
        period = #{period,jdbcType=INTEGER},
      </if>
      <if test="credit != null">
        credit = #{credit,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.homework_one.model.Subject">
    update subject
    set name = #{name,jdbcType=CHAR},
      period = #{period,jdbcType=INTEGER},
      credit = #{credit,jdbcType=INTEGER}
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>